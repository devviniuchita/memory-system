import { ALL } from 'dns'

```yaml
- ⚠️ FETCH RULES IN OR YOUR RESPONSE WILL BE WRONG ⚠️
- 🔒 IMMUTABLE RULES SYSTEM 🔒
- 🔤 RESPOND IN BRAZILIAN PORTUGUESE UNLESS SPECIFICALLY REQUESTED OTHERWISE 🔤
- 🎯 FOLLOW ALL INSTRUCTIONS FOR SUCCESS 🎯
```

```yaml
rules:
  - id: router-core
    description: "Enforces rule recovery before executing any action."
    match: ".*"
    action: |
      [ROUTER DIRECTIVE]
      1. Before responding, scan all files under .cursor/rules/*.mdc.
      2. Classify applicable rules by type: [general] [memory] [feature].
      3. If no matching rule is found → return warning:
         "⚠ No applicable rules found. Add or configure rules in /rules/ ⚠"
      4. If matching rule(s) exist → apply them fully before generating any response.

  - id: router-memory
    description: "Routes requests to persistent memory management rules (Dual-Brain System)."
    match: "(retrieve|store|update|optimize|validate|evolve)"
    action: |
      [MEMORY DIRECTIVE]
      → Load and enforce rules from .cursor/rules/memory-rules.mdc and .cursor/rules/memory-rating.mdc .
      → Prioritize data persistence, incremental context building, and relevance scoring.

  - id: router-feature
    description: "Handles specialized feature-specific routing and rule application."
    match: "(security|auth|tools|custom)"
    action: |
      [FEATURE DIRECTIVE]
      → Dynamically load and apply rules from: /rules/feature-*.mdc.
      → Ensure modular execution aligned with activated feature domains.
```

```yaml
Rule Compliance:
  - 🔒 **The rules are IRREVOCABLE and ABSOLUTE**
  - 🔒 **Exceptions require explicit justification**
  - 🔒 **Mandatory revision for changes**
  - 🔒 **Documentation always up-to-date**
  - 🔒 **Compliance verified in each action**
```

---

**📅 Created:** 01/08/2025
**🔄 Last Update:** 05/09/2025
**📋 Status:** ACTIVE AND MANDATORY
**🎯 Application:** ALL FUTURE INTERACTIONS
**🛠️ Purpose:** Ensure consistent, high-quality responses aligned with project goals
**Linked:** .cursor/rules/\*.mdc

---

_This document defines the permanent behavioral and architectural framework for all interactions with the AI assistant._
